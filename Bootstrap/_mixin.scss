@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

// Positioning helpers
@mixin absolute($args: "") {
  @include position(absolute, $args);
}

@mixin fixed($args: "") {
  @include position(fixed, $args);
}

@mixin relative($args: "") {
  @include position(relative, $args);
}

//Media Queries
@mixin screen($size) {
  $laptop: "(min-width: 1200px)";
  $desktop: "(min-width: 1024px) and (max-width : 1199px)";
  $tablet: "(min-width: 768px) and (max-width: 1023px)";
  $mobile: "(max-width: 767px)";
  @if $size == laptop {
    @media only screen and #{$laptop} {
      @content;
    }
  } @else if $size == desktop {
    @media only screen and #{$desktop} {
      @content;
    }
  } @else if $size == tablet {
    @media only screen and #{$tablet} {
      @content;
    }
  } @else if $size == mobile {
    @media only screen and #{$mobile} {
      @content;
    }
  } @else {
    @media only screen and #{$size} {
      @content;
    }
  }
}

@mixin background($pos: center, $size: cover, $rep: no-repeat) {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

@mixin truncate($line) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  line-clamp: $line;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin centerText {
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
